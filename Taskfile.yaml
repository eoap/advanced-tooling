version: '3'

includes:
  remote: https://raw.githubusercontent.com/eoap/task-files/refs/tags/0.1.0/build-test/Taskfile.yaml

tasks:
  build:
  - task: remote:build

  build-debug:
    cmds: 
    - defer: rm -f skaffold-auto.yaml
    - task: remote:prepare-kaniko
    - |
      skaffold build -f skaffold-auto.yaml 

  build-ttl:
  - task: remote:build-ttl

  prepare:
  - task: remote:prepare-kaniko

  test:
  - task: remote:test

  test-all:
    cmds: 
    - task: test-crop
    - task: test-norm-diff
    - task: test-otsu
    - task: test-stac

  test-crop:
    cmds:
    - task: remote:test-tool
      vars:
        VAR: "crop"

  test-norm-diff:
    cmds:
    - task: remote:test-tool
      vars:
        VAR: "norm_diff"

  test-otsu:
    cmds:
    - task: remote:test-tool
      vars:
        VAR: "otsu" 

  test-stac:
    cmds:
    - task: remote:test-tool
      vars:
        VAR: "stac"
  
  scenario-1:
  - task: remote:test-by-index
    vars:
      VAR: 0

  scan: 
    desc: "Scan Application Package OCI artifact for vulnerabilities"
    silent: true
    cmds:
    - |
      #!/usr/bin/env bash

      REF="ghcr.io/eoap/advanced-tooling/app-water-body-cloud-native:0.1.0"
      SBOM_BASE_DIR="attached-sboms"
      mkdir -p "$SBOM_BASE_DIR"

      echo "üîç Discovering SBOM digests for $REF..."
      DIGESTS=$(oras discover --artifact-type application/spdx+json \
          --format json "$REF" | jq -r '.manifests[].digest')

      for digest in $DIGESTS; do
        OUTDIR="$SBOM_BASE_DIR/$digest"
        echo "üì• Pulling $digest ‚Üí $OUTDIR"
        oras pull "$REF@$digest" -o "$OUTDIR"

        SBOM=$(find "$OUTDIR" -name '*.json' | head -n1)
        if [ -f "$SBOM" ]; then
          echo "üß™ Scanning SBOM: $SBOM"
          trivy sbom "$SBOM"
        else
          echo "‚ö†Ô∏è No SBOM found for $digest"
        fi
        rm -rf "$OUTDIR"
      done